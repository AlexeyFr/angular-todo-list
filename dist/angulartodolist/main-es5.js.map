{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pipes/todos-filter.pipe.ts","webpack:///src/app/services/todos.service.ts","webpack:///src/app/todos/form/todo-form.component.ts","webpack:///src/app/todos/form/todo-form.component.html","webpack:///src/app/todos/todos.component.ts","webpack:///src/app/todos/todos.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","appTitle","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","TodosFilterPipe","todos","search","trim","filter","todo","title","toLowerCase","indexOf","name","TodosService","http","get","pipe","response","iteration","res","date","Date","length","idx","findIndex","item","completed","confirm","push","providedIn","TodoFormComponent","todosService","now","addTodo","TodosComponent","IsLoading","fetchTodos","subscribe","onToggle","removeTodo","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  appTitle = 'Angular todo list'\n}\n","<div class=\"container\">\n  <h1>{{ appTitle }}</h1>\n  <app-todos></app-todos>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TodosComponent } from './todos/todos.component';\nimport { TodoFormComponent } from './todos/form/todo-form.component';\nimport { TodosFilterPipe } from './pipes/todos-filter.pipe';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosComponent,\n    TodoFormComponent,\n    TodosFilterPipe\n  ],\n\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    FormsModule\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ITodo } from '../models/todo.model';\n\n@Pipe({\n  name: 'todosFilter'\n})\n\nexport class TodosFilterPipe implements PipeTransform {\n\n  transform(todos: ITodo[], search: string = ''): ITodo[] {\n\n    if (!search.trim()) {\n      return todos\n    }\n\n    return todos.filter(todo => {\n      return todo.title.toLowerCase().indexOf(search.toLowerCase()) !== -1\n    })\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ITodo } from '../models/todo.model';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\n\nexport class TodosService {\n\n  public todos: ITodo[] = []\n\n  constructor( public http: HttpClient ) {}\n\n  fetchTodos(): Observable<ITodo[]> {\n    return this.http.get<ITodo[]>('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .pipe(tap(\n        response => {\n          let iteration = 0;\n          for (let res of response) {\n            res.date = new Date();\n            iteration++;\n            if (response.length == iteration) { this.todos = response }\n          }\n        }\n      ))\n  }\n\n  public onToggle(id: number) {\n    const idx = this.todos.findIndex(item => item.id === id)\n    this.todos[idx].completed = !this.todos[idx].completed\n  }\n\n  public removeTodo(id: number) {\n    if (confirm(\"Are you sure ?\")) {\n      this.todos = this.todos.filter(item => item.id !== id)\n    }\n  }\n\n  public addTodo(todo: ITodo) {\n    this.todos.push(todo)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TodosService } from '../../services/todos.service';\nimport { ITodo } from '../../models/todo.model';\n\n@Component({\n  selector: 'app-todo-form',\n  templateUrl: './todo-form.component.html',\n  styleUrls: ['./todo-form.component.scss']\n})\n\nexport class TodoFormComponent implements OnInit {\n\n  title: string = '';\n\n  constructor( public todosService: TodosService ) {}\n\n  ngOnInit() {}\n\n  addTodo() {\n\n    const todo: ITodo = {\n      title: this.title,\n      id: Date.now(),\n      completed: false,\n      date: new Date()\n    }\n\n    this.todosService.addTodo(todo)\n    this.title = ''\n\n  }\n\n}\n","<form class=\"form\" (ngSubmit)=\"addTodo()\">\n  <input type=\"text\" placeholder=\"Add new todo to list\" name=\"todo\" [(ngModel)]=\"title\">\n  <button class=\"add\" mat-icon-button color=\"accent\" aria-label=\"save icon\">\n    <mat-icon>save</mat-icon>\n  </button>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { TodosService } from '../services/todos.service';\nimport { delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss']\n})\n\nexport class TodosComponent implements OnInit {\n\n  public IsLoading: boolean = true;\n\n  public search = '';\n\n  constructor(public todosService: TodosService) {}\n\n  ngOnInit() {\n    this.todosService.fetchTodos()\n      .pipe(delay(500))\n      .subscribe(() => {\n        this.IsLoading = false\n      })\n  }\n\n  onChange(id: number) {\n    this.todosService.onToggle(id)\n  }\n\n  removeTodo(id: number) {\n    this.todosService.removeTodo(id)\n  }\n\n}\n","<div *ngIf=\"!IsLoading; else elseBlock\">\n\n  <div class=\"search\">\n    <input type=\"text\" placeholder=\"Search todo by title...\" [(ngModel)]=\"search\">\n  </div>\n\n  <ul class=\"list\" *ngIf=\"todosService.todos.length; else noTodos\">\n    <li *ngFor=\"let todo of todosService.todos | todosFilter:search; let i = 'index'\">\n      <p class=\"todo\" [class.done]=\"todo.completed\">\n        <mat-checkbox [checked]=\"todo.completed\" color=\"primary\" (change)=\"onChange(todo.id)\"></mat-checkbox>\n        <span class=\"title\">\n          <strong>{{ i +1 }}</strong>\n          {{ todo.title }}\n        </span>\n      </p>\n      <small class=\"date\">{{ todo.date |date: 'medium'}}</small>\n      <button mat-icon-button color=\"warn\" aria-label=\"delete icon\" (click)=\"removeTodo(todo.id)\">\n        <mat-icon>delete</mat-icon>\n      </button>\n    </li>\n  </ul>\n\n  <ng-template #noTodos>\n    <p class=\"no-todos\">No todos now!</p>\n  </ng-template>\n\n  <app-todo-form></app-todo-form>\n\n</div>\n\n<ng-template #elseBlock>\n  <mat-spinner color=\"primary\"></mat-spinner>\n</ng-template>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}